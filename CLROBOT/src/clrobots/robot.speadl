import clrobots.interfaces.CycleAlert
import clrobots.interfaces.Do
import clrobots.interfaces.ICreateRobot
import clrobots.interfaces.ITakeThreads
import clrobots.interfaces.Igui
import java.awt.Color

namespace clrobots {
	
	
	//Composant permettant l'affichage
	
	
	ecosystem EcoRobotAgents [Actionable, Context, SelfKnowledge] {
		
			requires threads: ITakeThreads
			provides createRobot: ICreateRobot
				
			//requires updateRobotsMap: UpdateRobotsList
			
			species Robot (id: String, color: Color) {
				
				requires envInteraction: Actionable
				requires envContext: Context
				provides launchCycle : Do = percevoir.perception	
				requires finishedCycle: CycleAlert
				
				part knowledge: Knowledge[SelfKnowledge]
				
				part percevoir: Percevoir[Context, SelfKnowledge]{
					bind decision to decider.decision
					bind knowledge to knowledge.selfKnowledge
					bind context to envContext
				}
				
				part decider: Decider[Actionable]{
					bind action to agir.action
				}
				part agir: Agir[Actionable, SelfKnowledge] {
					bind finishedCycle to finishedCycle
					bind interagir to envInteraction
					bind knowledge to knowledge.selfKnowledge
			}
		}
	}
	
	component Knowledge [SelfKnowledge] {
		provides selfKnowledge: SelfKnowledge
		
	}
		
	component Percevoir [Context, SelfKnowledge] {
		provides perception : Do
		requires context: Context
		requires knowledge: SelfKnowledge
		requires decision: Do
	}
	
	component Decider [Actionable] {
		provides decision : Do
		requires action: Actionable
	}
	
	component Agir [Actionable, SelfKnowledge] {
		provides action : Actionable
		requires interagir: Actionable
		requires finishedCycle : CycleAlert
		requires knowledge: SelfKnowledge 
	}
	
	
	
	
}