import clrobots.interfaces.CycleAlert
import clrobots.interfaces.Do
import clrobots.interfaces.IBoiteInfo
import clrobots.interfaces.ICreateBoite
import clrobots.interfaces.ICreateNid
import clrobots.interfaces.IEnvInfos
import clrobots.interfaces.INidInfo
import clrobots.interfaces.ITakeThreads
import clrobots.interfaces.Igui
import clrobots.interfaces.Iinteragir
import java.awt.Color

namespace clrobots{
	
	component GUI {
		requires gui : Igui
	}
	
	component Environnement {
		provides gui : Igui
		provides interagir : Iinteragir
		provides envInfos: IEnvInfos
		requires boitesInfos :IBoiteInfo
		requires nidInfos : INidInfo
	}
	
	ecosystem EcoBoite{
		provides create : ICreateBoite
		species Boite{
			provides boiteinfo : IBoiteInfo	
		}
	}
	
	ecosystem ForwardBoite[IBoiteInfo]{
		species AgentForward{
			requires a:IBoiteInfo
			
		}
		
		provides i: IBoiteInfo
	}
	
	ecosystem ForwardNid[INidInfo]{
		species AgentForward{
			requires a:INidInfo
			
		}
		
		provides i: INidInfo
	}
	
	ecosystem EcoNid{
		provides create : ICreateNid
		species Nid{
			provides nidinfo : INidInfo
		}
	}
	
	ecosystem EcoRobots{
		
			requires threads: ITakeThreads
			//requires updateRobotsMap: UpdateRobotsList
			
			species Robot(id: String, color: Color){
				
				//requires envInfosR: IEnvInfos 
				//requires interaction: Iinteragir
				
				provides launchCycle : Do = percevoir.perception	
				requires finishedCycle: CycleAlert
				
				part percevoir: Percevoir{
					bind decision to decider.decision
					//bind envInfos to envInfosR
				}
				
				part decider: Decider{
					bind action to agir.action
				}
				part agir: Agir{
					bind finishedCycle to finishedCycle
					//bind interagir to interaction
				}
			}
		}
		
	component Percevoir{
		provides perception : Do
		//requires envInfos : IEnvInfos
		requires decision: Do
	}
	
	component Decider{
		provides decision : Do
		requires action: Do
	}
	
	component Agir{
		provides action : Do
		requires finishedCycle : CycleAlert
		//requires interagir : Iinteragir
	}
	
	ecosystem Forward[I]{
		 species Agent{
		 	
		 	provides a: I
		 }
		 
		 requires i: I
	}
	
	
}